//------------------------------------------------------------------------------
// <auto-generated>
//     This file is part of the CleanArchitecture.Blazor project.
//     Licensed to the .NET Foundation under the MIT license.
//     See the LICENSE file in the project root for more information.
//
//     Author: neozhu
//     Created Date: 2024-12-11
//     Last Modified: 2024-12-11
//     Description: 
//       Defines a query for retrieving menusectionsubitems with pagination and filtering 
//       options. The result is cached to enhance performance for repeated queries.
// </auto-generated>
//------------------------------------------------------------------------------

using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.DTOs;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Mappers;
using CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Specifications;

namespace CleanArchitecture.Blazor.Application.Features.MenuSectionSubItems.Queries.Pagination;

public class MenuSectionSubItemsWithPaginationQuery : MenuSectionSubItemAdvancedFilter, IRequest<PaginatedData<MenuSectionSubItemDto>>
{
    public override string ToString()
    {
        return $"Listview:{ListView}:{CurrentUser?.UserId}-{LocalTimezoneOffset.TotalHours}, Search:{Keyword}, {OrderBy}, {SortDirection}, {PageNumber}, {PageSize}";
    }
    public MenuSectionSubItemAdvancedSpecification Specification => new MenuSectionSubItemAdvancedSpecification(this);
}
    
public class MenuSectionSubItemsWithPaginationQueryHandler :
         IRequestHandler<MenuSectionSubItemsWithPaginationQuery, PaginatedData<MenuSectionSubItemDto>>
{
        private readonly ISqlConnectionFactory _connectionFactory;

        public MenuSectionSubItemsWithPaginationQueryHandler(
            ISqlConnectionFactory connectionFactory)
        {
            _connectionFactory = connectionFactory;
        }

        public async Task<PaginatedData<MenuSectionSubItemDto>> Handle(MenuSectionSubItemsWithPaginationQuery request, CancellationToken cancellationToken)
        {
            var sql = $"""
                       SELECT
                           MSSI.Id,
                           MSSI.MenuSectionItemId,
                           MSSI.Title,
                           MSSI.Href,
                           MSSI.Roles,
                           MSSI.PageStatus,
                           MSSI.[Target],
                           MSSI.Created,
                           MSSI.CreatedBy,
                           MSSI.LastModified,
                           MSSI.LastModifiedBy,
                           MSSI.SerialNo,
                           MSI.Title MenuSectionItemTitle
                       FROM MenuSectionSubItems MSSI
                       INNER JOIN MenuSectionItems MSI ON MSSI.MenuSectionItemId = MSI.Id
                       """;
            var data = await PaginatedData<MenuSectionSubItemDto>.CreateAsync(_connectionFactory.GetOpenConnection(),
                sql, request);
            
            return data;
        }
}